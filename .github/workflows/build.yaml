name: CI/CD

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    name: Build Web App
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: web_app

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - run: pip install pipenv
      - run: pipenv sync --dev
      - run: pipenv run pytest --cov=. --cov-report=term-missing

      - name: Enforce 80% test coverage
        run: |
          COVERAGE=$(pipenv run coverage report | grep TOTAL | awk '{print $4}' | sed 's/%//')
          echo "Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Test coverage is below 80%" >&2
            exit 1
          fi
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy project (excluding .env) to Droplet
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          source: "."
          target: "/opt/myapp"
          strip_components: 0

      - name: Create .env file on Droplet
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            echo "${{ secrets.DOTENV_CONTENT }}" > /opt/myapp/.env

      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            cd /opt/myapp
            docker-compose down
            docker-compose up -d --build
